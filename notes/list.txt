List
----

# get index and value in List
for index, x in enumerate(xs)

# Map
# The map() function is used to apply a given function to every item of an iterable, such as a list or tuple, and returns a map object (which is an iterator)
a = [1, 2, 3, 4]
res = list(map(lambda x: x * 2, a))

# Reduce - apply a function to elements in a list in sequence and render final value
a = [1, 2, 3, 4, 5]
res = reduce(lambda x, y: x + y, a)
* note left value is the accumulated value

# if all items true
all(iterable)

# if one or more is true
any(iterable)

# reverse list
reverse(iter)

# Append - adds as another element in existing list
list1 = [1,2,3]
list1.append(4)
list1 == [1,2,3,4]
list1.append([3])
list1 == [1,2,3,4,[3]]

# + operator creates a new list
list1 = [1,2]
list2 = [4,5]
list3 = list1 + list2

# Extend - adds all elements in a iterable to the end of a list
list1 = [2,4,5]
list2 = [6,8]
list1.extend(list2)
list1 == [2,4,5,6,8]

# range - iterable 0 to range val -1
range(6) == [0,1,2,3,4,5]

# built in enumerate function
enumerate([c,e,l,t,i,c,s])
=> [ (0,c) , (1,e), (2,l)....]

