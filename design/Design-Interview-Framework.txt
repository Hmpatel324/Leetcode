A 4-step process for effective system design interview

 Step 1 Understand the problem and establish design scope: 3 - 10 minutes
 Step 2 Propose high-level design and get buy-in: 10 - 15 minutes
 Step 3 Design deep dive: 10 - 25 minutes
 Step 4 Wrap: 3 - 5 minute

===

Step 1 - Understand the problem and establish design scope
Use this step to buildout answers to ask open questions and harden assumptions - thus gathering information to build the system
Write down ALL assumptions for when actually building system

 • Is this a mobile app? Or a web app? Or both?
 • What specific features are we going to build?
 • How many users does the product have?
 • How fast does the company anticipate to scale up? What are the anticipated scales in 3 months, 6 months, and a year?
 • What is the company’s technology stack? What existing services you might leverage to
 simplify the design?

=== 

Step 2 - Propose high-level design and get buy-in

Aim to develop a high-level design and reach an agreement with the interviewer on the design. 
It is a great idea to collaborate with the interviewer during the process.

 • Come up with an initial blueprint for the design. 
   Ask for feedback. Treat your interviewer as a teammate and work together. 
   Many good interviewers love to talk and get involved.
   
 • Draw box diagrams with key components on the whiteboard or paper. 
   This might include clients (mobile/web), APIs, web servers, data stores, cache, CDN, message queue, etc.
   
 • Do back-of-the-envelope calculations to evaluate if your blueprint fits the scale constraints. 
   Think out loud. 
   Communicate with your interviewer if back-of-the-envelope is necessary before diving into it.
   If possible, go through a few concrete use cases. 
   This will help you frame the high-level design. 
   It is also likely that the use cases would help you discover edge cases you have not yet considered.
   
===

Step 3 - Design deep dive
 At this step, you and your interviewer should have already achieved the following objectives:
 • Agreed on the overall goals and feature scope
 • Sketched out a high-level blueprint for the overall design
 • Obtained feedback from your interviewer on the high-level design
 • Had some initial ideas about areas to focus on in deep dive based on her feedback
 
===

Step 4 - Wrap up
 the interviewer might ask you a few follow-up questions or give you the freedom to discuss other additional points. 
 Here are a few directions to follow:
 • The interviewer might want you to identify the system bottlenecks and discuss potential improvements. 
   Never say your design is perfect and nothing can be improved. 
   There is always something to improve upon. 
   This is a great opportunity to show your critical thinking and leave a good final impression.
   
 • It could be useful to give the interviewer a recap of your design. 
   This is particularly important if you suggested a few solutions. 
   Refreshing your interviewer’s memory can be helpful after a long session.
 • Error cases (server failure, network loss, etc.) are interesting to talk about.
 • Operation issues are worth mentioning. 
   How do you monitor metrics and error logs?
   How to roll out the system?
 • How to handle the next scale curve is also an interesting topic. 
   if your current design supports 1 million users, what changes do you need to make to support 10 million users?
 • Propose other refinements you need if you had more time
 
 
===
Dos
 • Always ask for clarification. Do not assume your assumption is correct.
 • Understand the requirements of the problem.
 • There is neither the right answer nor the best answer. 
 • Let the interviewer know what you are thinking. Communicate with your interview.
 • Suggest multiple approaches if possible.
 • Once you agree with your interviewer on the blueprint, go into details on each component. 
   Design the most critical components first.
 • Bounce ideas off the interviewer. A good interviewer works with you as a teammate.
 • Never give up.
 
 Don’ts
 • Don't be unprepared for typical interview questions.
 • Don’t jump into a solution without clarifying the requirements and assumptions.
 • Don’t go into too much detail on a single component in the beginning. 
   Give the high level design first then drills down.
 • If you get stuck, don't hesitate to ask for hints.
 • Again, communicate. Don't think in silence.
 • Don’t think your interview is done once you give the design. 
   You are not done until your interviewer says you are done. 
   Ask for feedback early and often.